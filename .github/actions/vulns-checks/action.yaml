name: vulns-checks
description: this check finds the vulnerabilities in the code
inputs:
  enable-vulns-check:
    description: |
      enable vulns check
      https://aquasecurity.github.io/trivy/
    required: true
    default: "false"
  enable-pr-comment:
    description: |
      enable pr comment
      false only for .net projects
    required: true
    default: "true"
  github-token:
    description: github token secret
    required: true

runs:
  using: composite
  steps:

    - name: exit if checks are disabled
      if: inputs.enable-vulns-check == 'false'
      shell: bash
      run: |
        exit 0

    - name: setup environment
      uses: saritasa-nest/saritasa-github-actions/.github/actions/prepare-vulns-secrets-env@v3.8-dev

    - name: run trivy vulnerability scanner in fs mode
      uses: aquasecurity/trivy-action@0.30.0
      if: inputs.enable-vulns-check == 'true'
      id: trivy-vulns-check
      with:
        scan-type: fs
        scan-ref: .
        format: sarif
        exit-code: 1
        output: vulns-results.sarif
        skip-setup-trivy: true
        scanners: vuln
      env:
        TRIVY_DB_REPOSITORY: "public.ecr.aws/aquasecurity/trivy-db:2"

    - name: add trivy failure vulns check results to data file
      shell: bash
      if: always() && steps.trivy-vulns-check.conclusion == 'failure'
      run: |
        python3 ${{ github.action_path }}/scripts/sarif-to-json.py vulns-results.sarif vulns-output.json vulns

        # Add the contents of the vulns-output.json file to data.json, from which 
        # notifications about the results of vulnerability checks are generated
        jq -s '.[0] * .[1]' vulns-output.json data.json | sponge data.json
        echo reactions="confused" > $GITHUB_ENV

    - name: create pr comment with checks results
      shell: bash
      if: always()
      run: |
        python3 ${{ github.action_path }}/scripts/generate-message.py \
          ${{ github.action_path }}/templates/pr-comment-template.j2 \
          data.json \
          pr-comment.md

    - name: add comment to github actions summary
      if: always()
      shell: bash
      run: |
        cat pr-comment.md > $GITHUB_STEP_SUMMARY

    - name: find pr comment with check results
      uses: peter-evans/find-comment@v3
      if: always() && github.event_name == 'pull_request' && inputs.enable-pr-comment == 'true'
      id: find-comment
      with:
        issue-number: ${{ github.event.number }}
        comment-author: "github-actions[bot]"
        body-includes: Summary of the vulns check

    - name: upload checks results as a pr comment
      if: always() && github.event_name == 'pull_request' && inputs.enable-pr-comment == 'true'
      uses: peter-evans/create-or-update-comment@v4
      with:
        issue-number: ${{ github.event.number }}
        comment-id: ${{ steps.find-comment.outputs.comment-id }}
        body-path: pr-comment.md
        edit-mode: replace
        reactions: ${{ env.reactions || 'laugh' }}
        reactions-edit-mode: replace
